{"ast":null,"code":"// src/utils/api.js\n\nimport axios from 'axios';\n\n// Ваш ключ API (не забудьте заменить на свой)\nconst API_KEY = 'YOUR_GOOGLE_BOOKS_API_KEY';\nconst API_URL = 'https://www.googleapis.com/books/v1/volumes';\n\n/**\r\n * Функция для выполнения запроса к Google Books API.\r\n * \r\n * @param {string} query - Строка поиска.\r\n * @param {string} category - Категория фильтрации.\r\n * @param {string} sort - Параметр сортировки.\r\n * @param {number} startIndex - Индекс для пагинации.\r\n * @returns {Promise<Object>} - Ответ от API.\r\n */\nexport const fetchBooks = async (query, category, sort, startIndex) => {\n  try {\n    console.log(`Запрос: ${API_URL}?q=${query}&filter=${category}&orderBy=${sort}&startIndex=${startIndex}&key=${API_KEY}`); // Логируем запрос\n\n    const response = await axios.get(API_URL, {\n      params: {\n        q: query,\n        filter: category === 'all' ? '' : category,\n        orderBy: sort,\n        startIndex: startIndex,\n        maxResults: 30,\n        // Максимальное количество результатов на страницу\n        key: API_KEY\n      }\n    });\n\n    // Возвращаем данные ответа\n    console.log('Ответ от API:', response.data); // Логируем ответ от API\n    return response.data;\n  } catch (error) {\n    console.error('Ошибка при загрузке данных с Google Books API:', error);\n    if (error.response) {\n      // Ошибка ответа от API\n      console.error('Ответ от сервера:', error.response.data);\n    }\n    throw new Error('Не удалось загрузить книги');\n  }\n};","map":{"version":3,"names":["axios","API_KEY","API_URL","fetchBooks","query","category","sort","startIndex","console","log","response","get","params","q","filter","orderBy","maxResults","key","data","error","Error"],"sources":["D:/LABS/5-semestr(and_variant)/Veb/src/MODSEN/books-search/src/utils/api.js"],"sourcesContent":["// src/utils/api.js\r\n\r\nimport axios from 'axios';\r\n\r\n// Ваш ключ API (не забудьте заменить на свой)\r\nconst API_KEY = 'YOUR_GOOGLE_BOOKS_API_KEY';\r\nconst API_URL = 'https://www.googleapis.com/books/v1/volumes';\r\n\r\n/**\r\n * Функция для выполнения запроса к Google Books API.\r\n * \r\n * @param {string} query - Строка поиска.\r\n * @param {string} category - Категория фильтрации.\r\n * @param {string} sort - Параметр сортировки.\r\n * @param {number} startIndex - Индекс для пагинации.\r\n * @returns {Promise<Object>} - Ответ от API.\r\n */\r\nexport const fetchBooks = async (query, category, sort, startIndex) => {\r\n  try {\r\n    console.log(`Запрос: ${API_URL}?q=${query}&filter=${category}&orderBy=${sort}&startIndex=${startIndex}&key=${API_KEY}`);  // Логируем запрос\r\n\r\n    const response = await axios.get(API_URL, {\r\n      params: {\r\n        q: query,\r\n        filter: category === 'all' ? '' : category,\r\n        orderBy: sort,\r\n        startIndex: startIndex,\r\n        maxResults: 30, // Максимальное количество результатов на страницу\r\n        key: API_KEY,\r\n      },\r\n    });\r\n\r\n    // Возвращаем данные ответа\r\n    console.log('Ответ от API:', response.data);  // Логируем ответ от API\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Ошибка при загрузке данных с Google Books API:', error);\r\n    if (error.response) {\r\n      // Ошибка ответа от API\r\n      console.error('Ответ от сервера:', error.response.data);\r\n    }\r\n    throw new Error('Не удалось загрузить книги');\r\n  }\r\n};\r\n"],"mappings":"AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,OAAO,GAAG,2BAA2B;AAC3C,MAAMC,OAAO,GAAG,6CAA6C;;AAE7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,EAAEC,IAAI,EAAEC,UAAU,KAAK;EACrE,IAAI;IACFC,OAAO,CAACC,GAAG,CAAC,WAAWP,OAAO,MAAME,KAAK,WAAWC,QAAQ,YAAYC,IAAI,eAAeC,UAAU,QAAQN,OAAO,EAAE,CAAC,CAAC,CAAE;;IAE1H,MAAMS,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAG,CAACT,OAAO,EAAE;MACxCU,MAAM,EAAE;QACNC,CAAC,EAAET,KAAK;QACRU,MAAM,EAAET,QAAQ,KAAK,KAAK,GAAG,EAAE,GAAGA,QAAQ;QAC1CU,OAAO,EAAET,IAAI;QACbC,UAAU,EAAEA,UAAU;QACtBS,UAAU,EAAE,EAAE;QAAE;QAChBC,GAAG,EAAEhB;MACP;IACF,CAAC,CAAC;;IAEF;IACAO,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEC,QAAQ,CAACQ,IAAI,CAAC,CAAC,CAAE;IAC9C,OAAOR,QAAQ,CAACQ,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdX,OAAO,CAACW,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;IACtE,IAAIA,KAAK,CAACT,QAAQ,EAAE;MAClB;MACAF,OAAO,CAACW,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAACT,QAAQ,CAACQ,IAAI,CAAC;IACzD;IACA,MAAM,IAAIE,KAAK,CAAC,4BAA4B,CAAC;EAC/C;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}